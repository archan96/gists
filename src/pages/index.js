import Head from "next/head";
import Image from "next/image";
import { Cinzel, Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import CSearch from "@/components/elements/search";
import CInput from "@/components/elements/input";
import { useScroll } from "framer-motion";
import { useState } from "react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faMagnifyingGlass, faSearch } from "@fortawesome/free-solid-svg-icons";
import { Colors } from "@/components/styled";
import { getUsername } from "@/controllers/handleQueries";
import Gists from "@/components/gists";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [val, setVal] = useState("");
  const [gists, setGists] = useState([]);
  const [loading, setloading] = useState(true);

  const submit = async () => {
    setloading(true);
    let data = await getUsername(val);
    console.log(data, "llll");
    setGists(data);
    setloading(false);
  };

  return (
    <>
      <Head>
        <title>Gists</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div className={`${styles.search}`}>
          <CInput
            placeholder="Enter Git Username"
            val={val}
            setVal={setVal}
            max={100}
          />
          <button
            onClick={() => {
              submit();
            }}
            className={`${styles.btn}`}
          >
            <FontAwesomeIcon
              icon={faMagnifyingGlass}
              color={Colors?.white}
              style={{
                height: "3vh",
              }}
            />
          </button>
        </div>
        {!loading && gists?.length > 0 && (
          <div className={`${styles.results}`}>
              {gists?.map((i, index) =>{
                return(
                  <Gists item={i} key={index} />
                )
              })}
          </div>
        )}

        {!loading && gists?.length == 0 && (
          <p
            style={{
              marginTop: "5vh",
            }}
          >
            No public gists found.
          </p>
        )}
      </main>
    </>
  );
}
